/**
* !!! DO NOT EDIT THIS FILE DIRECTLY !!!
* ! This file has been generated automatically. See the config/*.js version of
* ! this file to make permanent modifications!
*/

"use strict";

require("source-map-support/register");

var _webpackBundleAnalyzer = require("webpack-bundle-analyzer");

var _fs = require("fs");

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('dotenv').config();

const {
  ANALYZE_WEBPACK_BUNDLES
} = process.env;
const paths = {
  components: `${__dirname}/components`
};

module.exports = (phase, {
  defaultConfig
}) => {
  return {
    webpack: (config, {
      isServer
    }) => {
      if (ANALYZE_WEBPACK_BUNDLES) {
        config.plugins.push(new _webpackBundleAnalyzer.BundleAnalyzerPlugin({
          analyzerMode: 'server',
          analyzerPort: isServer ? 8888 : 8889,
          openAnalyzer: true
        }));
      }

      (0, _fs.readdirSync)(paths.components).map(dir => [_path.default.resolve(paths.components, dir), dir]).filter(([dirpath]) => (0, _fs.lstatSync)(dirpath).isDirectory()).forEach(([dirpath, dirname]) => config.resolve.alias[dirname] = dirpath);
      return config;
    },
    serverRuntimeConfig: {},
    publicRuntimeConfig: {}
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9uZXh0LmNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiQU5BTFlaRV9XRUJQQUNLX0JVTkRMRVMiLCJwcm9jZXNzIiwiZW52IiwicGF0aHMiLCJjb21wb25lbnRzIiwiX19kaXJuYW1lIiwibW9kdWxlIiwiZXhwb3J0cyIsInBoYXNlIiwiZGVmYXVsdENvbmZpZyIsIndlYnBhY2siLCJpc1NlcnZlciIsInBsdWdpbnMiLCJwdXNoIiwiQnVuZGxlQW5hbHl6ZXJQbHVnaW4iLCJhbmFseXplck1vZGUiLCJhbmFseXplclBvcnQiLCJvcGVuQW5hbHl6ZXIiLCJtYXAiLCJkaXIiLCJwYXRoIiwicmVzb2x2ZSIsImZpbHRlciIsImRpcnBhdGgiLCJpc0RpcmVjdG9yeSIsImZvckVhY2giLCJkaXJuYW1lIiwiYWxpYXMiLCJzZXJ2ZXJSdW50aW1lQ29uZmlnIiwicHVibGljUnVudGltZUNvbmZpZyJdLCJtYXBwaW5ncyI6Ijs7OztBQUVBOztBQUNBOztBQUNBOzs7O0FBRUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUVBLE1BQU07QUFBRUMsRUFBQUE7QUFBRixJQUE4QkMsT0FBTyxDQUFDQyxHQUE1QztBQUVBLE1BQU1DLEtBQUssR0FBRztBQUNWQyxFQUFBQSxVQUFVLEVBQUcsR0FBRUMsU0FBVTtBQURmLENBQWQ7O0FBSUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxLQUFELEVBQWdCO0FBQUVDLEVBQUFBO0FBQUYsQ0FBaEIsS0FBOEM7QUFDM0QsU0FBTztBQUNIQyxJQUFBQSxPQUFPLEVBQUUsQ0FBQ1gsTUFBRCxFQUFpQjtBQUFFWSxNQUFBQTtBQUFGLEtBQWpCLEtBQTBDO0FBQy9DLFVBQUdYLHVCQUFILEVBQTRCO0FBQ3hCRCxRQUFBQSxNQUFNLENBQUNhLE9BQVAsQ0FBZUMsSUFBZixDQUFvQixJQUFJQywyQ0FBSixDQUF5QjtBQUN6Q0MsVUFBQUEsWUFBWSxFQUFFLFFBRDJCO0FBRXpDQyxVQUFBQSxZQUFZLEVBQUVMLFFBQVEsR0FBRyxJQUFILEdBQVUsSUFGUztBQUd6Q00sVUFBQUEsWUFBWSxFQUFFO0FBSDJCLFNBQXpCLENBQXBCO0FBS0g7O0FBcUJELDJCQUFZZCxLQUFLLENBQUNDLFVBQWxCLEVBQ0tjLEdBREwsQ0FDU0MsR0FBRyxJQUFJLENBQUVDLGNBQUtDLE9BQUwsQ0FBYWxCLEtBQUssQ0FBQ0MsVUFBbkIsRUFBK0JlLEdBQS9CLENBQUYsRUFBdUNBLEdBQXZDLENBRGhCLEVBRUtHLE1BRkwsQ0FFWSxDQUFDLENBQUVDLE9BQUYsQ0FBRCxLQUFpQixtQkFBVUEsT0FBVixFQUFtQkMsV0FBbkIsRUFGN0IsRUFHS0MsT0FITCxDQUdhLENBQUMsQ0FBRUYsT0FBRixFQUFXRyxPQUFYLENBQUQsS0FBMEIzQixNQUFNLENBQUNzQixPQUFQLENBQWVNLEtBQWYsQ0FBcUJELE9BQXJCLElBQWdDSCxPQUh2RTtBQUtBLGFBQU94QixNQUFQO0FBQ0gsS0FuQ0U7QUFzQ0g2QixJQUFBQSxtQkFBbUIsRUFBRSxFQXRDbEI7QUEyQ0hDLElBQUFBLG1CQUFtQixFQUFFO0FBM0NsQixHQUFQO0FBK0NILENBaEREIiwic291cmNlc0NvbnRlbnQiOlsiLyogQGZsb3cgKi9cblxuaW1wb3J0IHsgQnVuZGxlQW5hbHl6ZXJQbHVnaW4gfSBmcm9tICd3ZWJwYWNrLWJ1bmRsZS1hbmFseXplcidcbmltcG9ydCB7IHJlYWRkaXJTeW5jLCBsc3RhdFN5bmMgfSBmcm9tICdmcydcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5cbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuXG5jb25zdCB7IEFOQUxZWkVfV0VCUEFDS19CVU5ETEVTIH0gPSBwcm9jZXNzLmVudlxuXG5jb25zdCBwYXRocyA9IHtcbiAgICBjb21wb25lbnRzOiBgJHtfX2Rpcm5hbWV9L2NvbXBvbmVudHNgLFxufTtcblxubW9kdWxlLmV4cG9ydHMgPSAocGhhc2U6IHN0cmluZywgeyBkZWZhdWx0Q29uZmlnIH06IE9iamVjdCkgPT4geyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgcmV0dXJuIHtcbiAgICAgICAgd2VicGFjazogKGNvbmZpZzogT2JqZWN0LCB7IGlzU2VydmVyIH06IE9iamVjdCkgPT4ge1xuICAgICAgICAgICAgaWYoQU5BTFlaRV9XRUJQQUNLX0JVTkRMRVMpIHtcbiAgICAgICAgICAgICAgICBjb25maWcucGx1Z2lucy5wdXNoKG5ldyBCdW5kbGVBbmFseXplclBsdWdpbih7XG4gICAgICAgICAgICAgICAgICAgIGFuYWx5emVyTW9kZTogJ3NlcnZlcicsXG4gICAgICAgICAgICAgICAgICAgIGFuYWx5emVyUG9ydDogaXNTZXJ2ZXIgPyA4ODg4IDogODg4OSxcbiAgICAgICAgICAgICAgICAgICAgb3BlbkFuYWx5emVyOiB0cnVlXG4gICAgICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGNvbmZpZy5lbnRyeSA9ICcuL3NyYy9pbmRleC5qcyc7XG4gICAgICAgICAgICAvLyBjb25maWcub3V0cHV0ID0ge1xuICAgICAgICAgICAgLy8gICAgIHBhdGg6IF9fZGlybmFtZSArICcvZGlzdCcsXG4gICAgICAgICAgICAvLyAgICAgcHVibGljUGF0aDogJy8nLFxuICAgICAgICAgICAgLy8gICAgIGZpbGVuYW1lOiAnYnVuZGxlLmpzJ1xuICAgICAgICAgICAgLy8gfTtcblxuICAgICAgICAgICAgLy8gY29uZmlnLmRldlNlcnZlciA9IHtcbiAgICAgICAgICAgIC8vICAgICBjb250ZW50QmFzZTogJy4vZGlzdCdcbiAgICAgICAgICAgIC8vIH07XG5cbiAgICAgICAgICAgIC8vIGNvbmZpZy5tb2R1bGUucnVsZXMucHVzaCh7XG4gICAgICAgICAgICAvLyAgICAgdGVzdDogL1xcLmpzJC8sXG4gICAgICAgICAgICAvLyAgICAgZXhjbHVkZTogL25vZGVfbW9kdWxlcy8sXG4gICAgICAgICAgICAvLyAgICAgdXNlOiB7XG4gICAgICAgICAgICAvLyAgICAgICAgIGxvYWRlcjogJ2JhYmVsLWxvYWRlcidcbiAgICAgICAgICAgIC8vICAgICB9XG4gICAgICAgICAgICAvLyB9KTtcblxuICAgICAgICAgICAgcmVhZGRpclN5bmMocGF0aHMuY29tcG9uZW50cylcbiAgICAgICAgICAgICAgICAubWFwKGRpciA9PiBbIHBhdGgucmVzb2x2ZShwYXRocy5jb21wb25lbnRzLCBkaXIpLCBkaXIgXSlcbiAgICAgICAgICAgICAgICAuZmlsdGVyKChbIGRpcnBhdGggXSkgPT4gbHN0YXRTeW5jKGRpcnBhdGgpLmlzRGlyZWN0b3J5KCkpXG4gICAgICAgICAgICAgICAgLmZvckVhY2goKFsgZGlycGF0aCwgZGlybmFtZSBdKSA9PiBjb25maWcucmVzb2x2ZS5hbGlhc1tkaXJuYW1lXSA9IGRpcnBhdGgpO1xuXG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8vID8gV2lsbCBvbmx5IGJlIGF2YWlsYWJsZSBvbiB0aGUgc2VydmVyIHNpZGVcbiAgICAgICAgc2VydmVyUnVudGltZUNvbmZpZzoge1xuICAgICAgICAgICAgLy8gLi4uXG4gICAgICAgIH0sXG5cbiAgICAgICAgLy8gPyBXaWxsIGJlIGF2YWlsYWJsZSBvbiBib3RoIHNlcnZlciBhbmQgY2xpZW50XG4gICAgICAgIHB1YmxpY1J1bnRpbWVDb25maWc6IHtcbiAgICAgICAgICAgIC8vIC4uLlxuICAgICAgICB9XG4gICAgfVxufTtcbiJdfQ==