{
  "name": "@projector-js/core",
  "version": "1.2.0",
  "description": "The library on which Projector's suite of tools is built",
  "keywords": [
    "library",
    "toolkit",
    "core",
    "projector"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/projector"
  },
  "license": "MIT",
  "author": "Xunnamius",
  "sideEffects": false,
  "type": "commonjs",
  "exports": {
    "./import-aliases": {
      "docs": "./src/import-aliases.ts",
      "types": "./dist/types/packages/core/src/import-aliases.d.ts",
      "module": "./dist/esm-shakable/import-aliases.mjs",
      "node": "./dist/cjs-static/import-aliases.js",
      "default": "./dist/esm-shakable/import-aliases.mjs"
    },
    "./project-utils": {
      "docs": "./src/project-utils.ts",
      "types": "./dist/types/packages/core/src/project-utils.d.ts",
      "module": "./dist/esm-shakable/project-utils.mjs",
      "node": "./dist/cjs-static/project-utils.js",
      "default": "./dist/esm-shakable/project-utils.mjs"
    },
    "./errors": {
      "docs": "./src/errors.ts",
      "types": "./dist/types/packages/core/src/errors.d.ts",
      "module": "./dist/esm-shakable/errors.mjs",
      "node": "./dist/cjs-static/errors.js",
      "default": "./dist/esm-shakable/errors.mjs"
    },
    "./package": "./package.json",
    "./package.json": "./package.json"
  },
  "typesVersions": {
    "*": {
      "*": [
        "dist/types/packages/core/src/*"
      ]
    }
  },
  "files": [
    "/dist",
    "/LICENSE",
    "/package.json",
    "/README.md"
  ],
  "scripts": {
    "build": "npm run build-dist --",
    "build-changelog": "conventional-changelog --outfile CHANGELOG.md --config ../../conventional.config.js --release-count 0 --skip-unstable && (if [ \"$CHANGELOG_SKIP_TITLE\" != 'true' ]; then { node -e 'console.log(require(\"../../conventional.config.js\").changelogTitle)'; cat CHANGELOG.md; } > CHANGELOG.md.ignore && mv CHANGELOG.md.ignore CHANGELOG.md; fi) && remark -o --use reference-links --use gfm --use frontmatter CHANGELOG.md && prettier --write CHANGELOG.md",
    "build-dist": "if [ -r ./next.config.js ]; then next build; else NODE_ENV=production tsc --project tsconfig.types.json --incremental false && tsconfig-replace-paths --project tsconfig.types.json && (export PKGROOT=`pwd` && cd ../.. && NODE_ENV=production webpack --config-name cjs-static) && if [ -r ./src/cli.ts ]; then (export PKGROOT=`pwd` && cd ../.. && NODE_ENV=production webpack --config-name cli) && chmod +x ./dist/cli.js; fi && NODE_ENV=esm-shakable babel src --extensions .ts --out-dir dist/esm-shakable --out-file-extension .mjs --root-mode upward; fi",
    "build-docs": "if [ -r ./next.config.js ]; then typedoc --plugin typedoc-plugin-markdown --tsconfig tsconfig.docs.json --out docs --readme none lib src test types external-scripts --exclude '**/*.test.*' --exclude external-scripts/bin; else ENTRY=`node -e 'const entry = require(\"./package.json\").config?.docs?.entry; if(!entry) throw new Error(\"\\\"config.docs.entry\\\" key is not defined in package.json\"); console.log(entry)'` && echo 'Entry file:' \"$ENTRY\" && typedoc --plugin typedoc-plugin-markdown --tsconfig tsconfig.docs.json --out docs --readme none $(echo $ENTRY) && find docs -name '*.md' -exec sed -i -e 's/Project: //g' {} + && sed -i -e 1,4d docs/README.md; fi && find docs -name '*.md' -exec sed -i -e 's/`__namedParameters`/`\\(destructured\\)`/g' {} + && find docs -name '*.md' -exec sed -i -E 's/`__namedParameters\\.([^`]+)`/`\\({ \\1 }\\)`/g' {} +",
    "clean": "git ls-files --exclude-standard --ignored --others --directory | grep -vE '^((\\.(env|vscode|husky))|next-env\\.d\\.ts|node_modules)($|\\/)' | xargs -p rm -rf",
    "format": "cd ../.. && npm run format",
    "lint": "echo 'IMPLEMENT ME'",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))'",
    "test": "npm run test-unit --",
    "test-integration": "echo 'IMPLEMENT ME'",
    "test-unit": "echo 'IMPLEMENT ME'"
  },
  "config": {
    "docs": {
      "entry": "./src/*"
    }
  },
  "dependencies": {
    "find-up": "^5.0.0",
    "glob": "^7.2.0",
    "is-valid-path": "^0.1.1",
    "named-app-errors": "^3.0.3"
  },
  "engines": {
    "node": "^14.19.0 || ^16.13.0 || >=17.4.0"
  },
  "publishConfig": {
    "access": "public"
  }
}
