{
  "name": "projector-monorepo",
  "private": true,
  "homepage": "https://github.com/Xunnamius/projector",
  "repository": {
    "type": "git",
    "url": "https://github.com/Xunnamius/projector",
    "lens": "lib-cjs"
  },
  "license": "MIT",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "__test:repeat:all": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true NODE_ENV=test jest --reporters=jest-silent-reporter || exit; done) && echo \"All tests passed! Congrats!\"",
    "__test:repeat:unit": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true NODE_ENV=test jest --reporters=jest-silent-reporter --testPathIgnorePatterns test/integration-*.test.ts dist || exit; done) && echo \"All tests passed! Congrats!\"",
    "clean": "git ls-files --exclude-standard --ignored --others --directory | grep -vE '^((\\.(env|vscode|husky))|next-env\\.d\\.ts|node_modules)($|\\/)' | xargs -p rm -rf",
    "format": "MD_FILES=$(node -e 'console.log(require(`glob-gitignore`).sync(`**/*.md`, { ignore: require(`fs`).readFileSync(`.prettierignore`, `utf8`).split(`\n`).filter(Boolean), dot: true }).join(`\n`))') && (echo $MD_FILES | xargs remark --no-config --no-stdout --quiet --frail --use gfm --use lint-no-undefined-references || (echo -n '\u001b' && echo '[37;41;1m FAIL \u001b[0m cannot continue with undefined references present' && false)) && sort-package-json './package.json' './packages/*/package.json' && echo $MD_FILES | NODE_ENV=format xargs remark --output --frail && echo $MD_FILES | xargs doctoc --no-title --maxlevel 3 --update-only && prettier --write .",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json --no-error-on-unmatched-pattern packages src; Y=$?; MD_FILES=$(node -e 'console.log(require(`glob-gitignore`).sync(`**/*.md`, { ignore: require(`fs`).readFileSync(`.prettierignore`, `utf8`).split(`\n`).filter(Boolean), dot: true }).join(`\n`))') && echo $MD_FILES | NODE_ENV=lint xargs remark --quiet --frail --no-stdout; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "lint:all": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.eslint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.eslint.json .; Y=$?; MD_FILES=$(node -e 'console.log(require(`glob-gitignore`).sync(`**/*.md`, { ignore: require(`fs`).readFileSync(`.prettierignore`, `utf8`).split(`\n`).filter(Boolean), dot: true }).join(`\n`))') && echo $MD_FILES | NODE_ENV=lint xargs remark --quiet --frail --no-stdout; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))' && npm run -ws list-tasks --if-present",
    "prepare": "if [ -z \"$CI\" ] && ([ -z \"$NODE_ENV\" ] || [ \"$NODE_ENV\" = \"development\" ]); then husky install; if [ -r .husky/post-checkout ]; then .husky/post-checkout; fi; else echo 'skipped installing husky git hooks'; fi",
    "test": "npm run test:unit --",
    "test:all": "NODE_ENV=test jest --coverage",
    "test:integration": "NODE_ENV=test jest --coverage 'integration-.*\\.test\\.ts.*'",
    "test:repeat:all": "npm run __test:repeat:all --silent",
    "test:repeat:unit": "npm run __test:repeat:unit --silent",
    "test:unit": "NODE_ENV=test jest --coverage --testPathIgnorePatterns 'integration-.*\\.test\\.ts.*'"
  },
  "devDependencies": {
    "@babel/cli": "^7.24.6",
    "@babel/core": "^7.24.6",
    "@babel/eslint-parser": "^7.24.6",
    "@babel/plugin-proposal-export-default-from": "^7.24.6",
    "@babel/plugin-syntax-import-assertions": "^7.24.6",
    "@babel/plugin-transform-runtime": "^7.24.6",
    "@babel/preset-env": "^7.24.6",
    "@babel/preset-typescript": "^7.24.6",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/exec": "^6.0.3",
    "@semantic-release/git": "^10.0.1",
    "@types/confusing-browser-globals": "^1.0.3",
    "@types/is-valid-path": "^0.1.2",
    "@types/jest": "^29.5.12",
    "@types/lodash.castarray": "^4.4.9",
    "@types/lodash.mergewith": "^4.6.9",
    "@types/node": "^20.12.13",
    "@types/semver": "^7.5.8",
    "@typescript-eslint/eslint-plugin": "^7.11.0",
    "@typescript-eslint/parser": "^7.11.0",
    "@xunnamius/conventional-changelog-projector": "^1.2.1",
    "@xunnamius/jest-types": "^1.1.3",
    "@xunnamius/types": "^1.3.0",
    "all-contributors-cli": "^6.26.1",
    "babel-jest": "^29.7.0",
    "babel-loader": "^9.1.3",
    "babel-plugin-add-import-extension": "^1.6.0",
    "babel-plugin-explicit-exports-references": "^1.0.2",
    "babel-plugin-module-resolver": "^5.0.2",
    "babel-plugin-source-map-support": "^2.2.0",
    "babel-plugin-transform-default-named-imports": "^1.2.2",
    "babel-plugin-transform-rename-import": "^2.3.0",
    "babel-plugin-transform-rewrite-imports": "^1.2.0",
    "confusing-browser-globals": "^1.0.11",
    "conventional-changelog-cli": "https://xunn.at/conventional-changelog-cli",
    "doctoc": "^2.2.1",
    "dotenv": "^16.4.5",
    "escape-string-regexp": "^4.0.0",
    "eslint": "^8.34.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-babel-module": "^5.3.2",
    "eslint-import-resolver-typescript": "^3.6.1",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^28.5.0",
    "eslint-plugin-module-resolver": "^1.5.0",
    "eslint-plugin-no-instanceof": "^1.0.1",
    "eslint-plugin-unicorn": "^53.0.0",
    "execa": "^5.1.1",
    "glob-gitignore": "^1.0.14",
    "husky": "^9.0.11",
    "jest": "29.7.0",
    "jest-circus": "^29.7.0",
    "jest-extended": "^4.0.2",
    "lint-staged": "^15.2.5",
    "lodash.castarray": "^4.4.0",
    "lodash.mergewith": "^4.6.2",
    "marked-gfm-heading-id": "^3.1.3",
    "marked-mangle": "^1.1.7",
    "named-app-errors": "^4.0.2",
    "prettier": "^3.2.5",
    "remark-capitalize-headings": "^2.0.1",
    "remark-cli": "^12.0.1",
    "remark-comment-config": "^8.0.0",
    "remark-frontmatter": "^5.0.0",
    "remark-gfm": "^4.0.0",
    "remark-ignore": "^2.0.0",
    "remark-lint": "^10.0.0",
    "remark-lint-definition-case": "^4.0.0",
    "remark-lint-fenced-code-flag": "^4.0.0",
    "remark-lint-fenced-code-flag-case": "^2.0.0",
    "remark-lint-file-extension": "^3.0.0",
    "remark-lint-first-heading-level": "^4.0.0",
    "remark-lint-heading-increment": "^4.0.0",
    "remark-lint-heading-whitespace": "^1.0.0",
    "remark-lint-heading-word-length": "^2.0.0",
    "remark-lint-list-item-style": "^2.0.0",
    "remark-lint-no-duplicate-defined-urls": "^3.0.0",
    "remark-lint-no-duplicate-headings-in-section": "^4.0.0",
    "remark-lint-no-empty-sections": "^4.0.0",
    "remark-lint-no-empty-url": "https://xunn.at/remark-lint-no-empty-url",
    "remark-lint-no-heading-like-paragraph": "^4.0.0",
    "remark-lint-no-heading-punctuation": "^4.0.0",
    "remark-lint-no-inline-padding": "^4.1.2",
    "remark-lint-no-literal-urls": "^4.0.0",
    "remark-lint-no-multiple-toplevel-headings": "^4.0.0",
    "remark-lint-no-reference-like-url": "^4.0.0",
    "remark-lint-no-shell-dollars": "^4.0.0",
    "remark-lint-no-shortcut-reference-image": "^4.0.0",
    "remark-lint-no-shortcut-reference-link": "^4.0.0",
    "remark-lint-no-tabs": "^4.0.0",
    "remark-lint-no-undefined-references": "^5.0.0",
    "remark-lint-ordered-list-marker-value": "^4.0.0",
    "remark-lint-strikethrough-marker": "^3.0.0",
    "remark-lint-unordered-list-marker-style": "^4.0.0",
    "remark-reference-links": "^7.0.0",
    "remark-remove-unused-definitions": "^2.0.0",
    "remark-remove-url-trailing-slash": "^2.0.0",
    "remark-renumber-references": "^2.0.0",
    "remark-sort-definitions": "^2.0.0",
    "remark-tight-comments": "^2.0.0",
    "remark-validate-links": "^13.0.1",
    "semantic-release": "https://xunn.at/semantic-release-atam@22.0.7",
    "simple-git": "^3.24.0",
    "sort-package-json": "https://xunn.at/sort-package-json",
    "source-map-support": "^0.5.21",
    "spellchecker": "^3.7.1",
    "text-extensions": "^3.0.0",
    "toss-expression": "^0.1.2",
    "tsconfig-replace-paths": "^0.0.14",
    "type-fest": "^4.18.3",
    "typedoc": "^0.25.13",
    "typedoc-plugin-markdown": "^4.0.3",
    "typescript": "5.4.5",
    "unique-filename": "^3.0.0"
  }
}
