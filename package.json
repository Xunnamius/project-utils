{
  "name": "projector-monorepo",
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "__test-repeat-all": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true BABEL_ENV=test jest --reporters=jest-silent-reporter || exit; done) && echo \"All tests passed! Congrats!\"",
    "__test-repeat-unit": "echo 'Repeating test suite [initializing]...'; (i=0; while [ \"$((( i += 1 ) <= 100 ))\" -ne 0 ]; do sleep 0.1 && echo \"\\r\\033[1A\\033[0KRepeating test suite [run $i/100]...\" && JEST_SILENT_REPORTER_SHOW_WARNINGS=true BABEL_ENV=test jest --reporters=jest-silent-reporter --testPathIgnorePatterns test/integration-*.test.ts dist || exit; done) && echo \"All tests passed! Congrats!\"",
    "clean": "git ls-files --exclude-standard --ignored --others --directory | grep -vE '^((\\.(env|vscode|husky))|next-env\\.d\\.ts|node_modules)($|\\/)' | xargs -p rm -rf",
    "format": "sort-package-json && remark -o --use reference-links --use gfm --use frontmatter '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && prettier --write '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}' && if [ -z \"$ALLOW_DISABLED_LINKS\" ] && grep -qR --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; then echo '---\nWARNING: disabled links were found in the following files:'; grep -R --color=always --exclude-dir=node_modules --include='*.md' '\\\\\\[[^\\]*\\]\\\\' .; echo '(to ignore this error, run this command again with ALLOW_DISABLED_LINKS=1)'; exit 1; fi",
    "lint": "stdbuf -i0 -o0 -e0 tsc --project tsconfig.lint.json; X=$?; stdbuf -i0 -o0 -e0 eslint --parser-options=project:tsconfig.lint.json packages; Y=$?; remark --quiet --use gfm --use frontmatter --use lint-final-newline --use lint-no-auto-link-without-protocol --use lint-no-blockquote-without-marker --use lint-ordered-list-marker-style --use lint-hard-break-spaces --use lint-no-duplicate-definitions --use lint-no-heading-content-indent --use lint-no-inline-padding --use lint-no-undefined-references --use lint-no-unused-definitions --use validate-links '{{,.}*.md,!(node_modules)/**/{,.}*.md,.*/**/{,.}*.md}'; Z=$?; [ $X -eq 0 ] && [ $Y -eq 0 ] && [ $Z -eq 0 ]",
    "list-tasks": "node -e 'console.log(Object.keys(require(\"./package.json\").scripts).join(\"\\n\"))' && npm run -ws list-tasks --if-present",
    "prepare": "if [ -z \"$CI\" ] && ([ -z \"$NODE_ENV\" ] || [ \"$NODE_ENV\" = \"development\" ]); then husky install; else echo 'skipped installing husky git hooks'; fi",
    "test": "npm run test-unit --",
    "test-integration": "BABEL_ENV=test jest $JEST_CLI test/integration-*.test.ts* --testPathIgnorePatterns dist test/unit-*.test.ts",
    "test-repeat-all": "npm run __test-repeat-all --silent",
    "test-repeat-unit": "npm run __test-repeat-unit --silent",
    "test-unit": "BABEL_ENV=test jest $JEST_CLI --coverage --collectCoverageFrom 'src/**/*.ts*' --collectCoverageFrom 'lib/**/*.ts*' --collectCoverageFrom 'external-scripts/**/*.ts*' --testPathIgnorePatterns test/integration-*.test.ts* dist"
  },
  "devDependencies": {
    "@babel/cli": "^7.16.0",
    "@babel/core": "^7.16.0",
    "@babel/eslint-parser": "^7.16.3",
    "@babel/plugin-proposal-export-default-from": "^7.16.0",
    "@babel/plugin-proposal-function-bind": "^7.16.0",
    "@babel/preset-env": "^7.16.4",
    "@babel/preset-typescript": "^7.16.0",
    "@commitlint/cli": "^15.0.0",
    "@commitlint/config-conventional": "^15.0.0",
    "@semantic-release/changelog": "^6.0.1",
    "@semantic-release/exec": "^6.0.2",
    "@semantic-release/git": "^10.0.1",
    "@types/confusing-browser-globals": "^1.0.0",
    "@types/is-valid-path": "^0.1.0",
    "@types/jest": "^27.0.3",
    "@types/node": "^16.11.12",
    "@typescript-eslint/eslint-plugin": "^5.4.0",
    "@typescript-eslint/parser": "^5.4.0",
    "@xunnamius/conventional-changelog-projector": "^1.1.1",
    "babel-jest": "^27.3.1",
    "babel-loader": "^8.2.3",
    "babel-plugin-add-import-extension": "^1.6.0",
    "babel-plugin-explicit-exports-references": "^1.0.1",
    "babel-plugin-source-map-support": "^2.1.3",
    "babel-plugin-transform-default-named-imports": "^1.2.1",
    "babel-plugin-transform-rename-import": "^2.3.0",
    "confusing-browser-globals": "^1.0.10",
    "conventional-changelog-cli": "https://gitpkg.now.sh/xunnamius/conventional-changelog/packages/conventional-changelog-cli",
    "dotenv": "^10.0.0",
    "eslint": "^8.3.0",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-jest": "^25.3.0",
    "execa": "^5.1.1",
    "husky": "^7.0.4",
    "jest": "^27.3.1",
    "jest-circus": "^27.3.1",
    "jest-extended": "^1.1.0",
    "lint-staged": "^12.1.2",
    "prettier": "^2.5.0",
    "remark-cli": "^10.0.1",
    "remark-frontmatter": "^4.0.1",
    "remark-gfm": "^3.0.1",
    "remark-lint-final-newline": "^2.1.0",
    "remark-lint-hard-break-spaces": "^3.1.0",
    "remark-lint-no-auto-link-without-protocol": "^3.1.0",
    "remark-lint-no-blockquote-without-marker": "^5.1.0",
    "remark-lint-no-duplicate-definitions": "^3.1.0",
    "remark-lint-no-heading-content-indent": "^4.1.0",
    "remark-lint-no-inline-padding": "^4.1.0",
    "remark-lint-no-undefined-references": "^4.1.0",
    "remark-lint-no-unused-definitions": "^3.1.0",
    "remark-lint-ordered-list-marker-style": "^3.1.0",
    "remark-reference-links": "^6.0.1",
    "remark-validate-links": "^11.0.2",
    "semantic-release": "github:xunnamius/semantic-release",
    "sort-package-json": "github:xunnamius/sort-package-json",
    "source-map-support": "^0.5.21",
    "spellchecker": "^3.7.1",
    "text-extensions": "^2.4.0",
    "tsconfig-replace-paths": "github:xunnamius/tsconfig-replace-paths",
    "type-fest": "^2.6.0",
    "typedoc": "^0.22.10",
    "typedoc-plugin-markdown": "^3.11.7",
    "typescript": "^4.5.2",
    "webpack": "^5.64.4",
    "webpack-cli": "^4.9.1"
  }
}
